name: Daily Mathematical Problem Generator

on:
  # 每天北京时间17:10（UTC+8）运行，即UTC时间9:10
  schedule:
    - cron: '10 9 * * *'
  
  # 每天北京时间20点运行答案生成，即UTC时间12点  
  schedule:
    - cron: '0 12 * * *'
  
  # 允许手动触发
  workflow_dispatch:
    inputs:
      action_type:
        description: 'Action to perform'
        required: true
        default: 'generate-problem'
        type: choice
        options:
        - generate-problem
        - generate-answer
        - both
      category:
        description: 'Problem category (optional)'
        required: false
        type: string

jobs:
  # 生成新题目的作业
  generate-problem:
    runs-on: ubuntu-latest
    if: ${{ github.event.schedule == '0 1 * * *' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.action_type == 'generate-problem' || github.event.inputs.action_type == 'both')) }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure Git
      run: |
        git config --global user.name "Mathematical Everyday Bot"
        git config --global user.email "mathematical-everyday@users.noreply.github.com"

    - name: Check if problem exists for today
      id: check_problem
      run: |
        TODAY=$(date +%Y-%m-%d)
        if find questions -name "*${TODAY}*" -type f | grep -q .; then
          echo "problem_exists=true" >> $GITHUB_OUTPUT
          echo "📚 Problem already exists for today: $TODAY"
        else
          echo "problem_exists=false" >> $GITHUB_OUTPUT
          echo "🎯 No problem found for today: $TODAY"
        fi

    - name: Generate daily problem
      if: steps.check_problem.outputs.problem_exists == 'false'
      run: |
        if [ "${{ github.event.inputs.category }}" != "" ]; then
          npm start generate-problem -c "${{ github.event.inputs.category }}"
        else
          npm start generate-problem
        fi
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        DOUBAO_API_KEY: ${{ secrets.DOUBAO_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        AI_MODEL: ${{ vars.AI_MODEL || 'deepseek' }}

    - name: Update README
      if: steps.check_problem.outputs.problem_exists == 'false'
      run: node update-readme.js

    - name: Commit and push changes
      if: steps.check_problem.outputs.problem_exists == 'false'
      run: |
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          TODAY=$(date +%Y-%m-%d)
          git commit -m "🎯 Generate daily problem for $TODAY

          📚 Auto-generated by GitHub Actions
          🤖 Powered by AI
          📅 Date: $TODAY"
          git push
        fi

  # 生成答案的作业
  generate-answer:
    runs-on: ubuntu-latest
    if: ${{ github.event.schedule == '0 12 * * *' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.action_type == 'generate-answer' || github.event.inputs.action_type == 'both')) }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure Git
      run: |
        git config --global user.name "Mathematical Everyday Bot"
        git config --global user.email "mathematical-everyday@users.noreply.github.com"

    - name: Generate answers for pending problems
      run: npm start generate-solutions
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        DOUBAO_API_KEY: ${{ secrets.DOUBAO_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        AI_MODEL: ${{ vars.AI_MODEL || 'deepseek' }}

    - name: Update README
      run: node update-readme.js

    - name: Commit and push changes
      run: |
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          TODAY=$(date +%Y-%m-%d)
          git commit -m "✅ Generate answers for pending problems

          📝 Auto-generated solutions by GitHub Actions
          🤖 Powered by AI
          📅 Date: $TODAY"
          git push
        fi

  # 统计和维护作业（每周日运行）
  maintenance:
    runs-on: ubuntu-latest
    if: ${{ github.event.schedule == '0 0 * * 0' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate statistics
      run: |
        echo "📊 Project Statistics" > WEEKLY_STATS.md
        echo "Generated on: $(date)" >> WEEKLY_STATS.md
        echo "" >> WEEKLY_STATS.md
        npm start stats >> WEEKLY_STATS.md 2>&1 || true

    - name: Check for duplicates
      run: |
        echo "" >> WEEKLY_STATS.md
        echo "🔍 Duplicate Check Results" >> WEEKLY_STATS.md
        npm start check-duplicates -v >> WEEKLY_STATS.md 2>&1 || true

    - name: History cleanup
      run: |
        npm start history cleanup -n 1000 || true
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}

    - name: Update README with latest statistics
      run: node update-readme.js

    - name: Commit maintenance updates
      run: |
        git config --global user.name "Mathematical Everyday Bot"
        git config --global user.email "mathematical-everyday@users.noreply.github.com"
        git add .
        if git diff --staged --quiet; then
          echo "No maintenance changes to commit"
        else
          git commit -m "🧹 Weekly maintenance and statistics update

          📊 Updated project statistics
          🔍 Performed duplicate check
          🧹 Cleaned up history records
          📅 Date: $(date +%Y-%m-%d)"
          git push
        fi
