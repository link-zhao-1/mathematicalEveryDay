// 题目重复检测示例

// 示例题目1
const problem1 = {
  title: "求函数 f(x) = x^2 + 2x + 1 的极值点",
  description: "已知函数 f(x) = x^2 + 2x + 1，求该函数的极值点和极值。",
  category: "微分学"
};

// 示例题目2 - 高度相似
const problem2 = {
  title: "计算函数 g(x) = x^2 + 2x + 1 的极值",
  description: "给定函数 g(x) = x^2 + 2x + 1，求出函数的极值点及对应的极值。",
  category: "微分学"
};

// 示例题目3 - 不同题目
const problem3 = {
  title: "计算二重积分 ∫∫D xy dxdy",
  description: "计算区域 D: {(x,y) | 0≤x≤1, 0≤y≤1} 上的二重积分 ∫∫D xy dxdy。",
  category: "多重积分"
};

// 相似度分析结果：

// problem1 vs problem2:
// - 标题相似度: 85% (都是求极值，函数几乎相同)
// - 内容相似度: 90% (描述几乎一致)
// - 概念相似度: 100% (都包含：函数、极值、极值点)
// - 总相似度: 85% * 0.4 + 90% * 0.4 + 100% * 0.2 = 90%
// - 判定结果: 重复！(> 70%)

// problem1 vs problem3:
// - 标题相似度: 10% (完全不同的数学内容)
// - 内容相似度: 15% (描述内容差异很大)
// - 概念相似度: 0% (一个是微分，一个是积分)
// - 总相似度: 10% * 0.4 + 15% * 0.4 + 0% * 0.2 = 10%
// - 判定结果: 不重复 (< 70%)

console.log("题目重复检测机制演示");
console.log("===========================");
console.log("检测维度：");
console.log("1. 标题相似度 (权重40%)");
console.log("2. 内容相似度 (权重40%)"); 
console.log("3. 概念相似度 (权重20%)");
console.log("===========================");
console.log("判定阈值：");
console.log("- 重复: 相似度 ≥ 70%");
console.log("- 高相似: 相似度 ≥ 50%");
console.log("- 独特: 相似度 < 50%");
